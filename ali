import os
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QVBoxLayout, QWidget
from PyQt5.QtGui import QIcon, QFont, QColor, QPalette
from PyQt5.QtCore import Qt
import config
import stt
from fuzzywuzzy import fuzz
import datetime
from num2words import num2words
import webbrowser
import random
import keyboard
import winsound
import subprocess
import psutil
import mouse



winsound.PlaySound('d11.mp3', winsound.SND_FILENAME)
def va_respond(voice: str):
    print(voice)
    if voice.startswith(config.VA_ALIAS):
        # обращаются к ассистенту
        cmd = recognize_cmd(filter_cmd(voice))

        if cmd['cmd'] not in config.VA_CMD_LIST.keys():
            winsound.PlaySound('d2.mp3', winsound.SND_FILENAME)
        else:
            execute_cmd(cmd['cmd'])




def filter_cmd(raw_voice: str):
    cmd = raw_voice

    for x in config.VA_ALIAS:
        cmd = cmd.replace(x, "").strip()

    for x in config.VA_TBR:
        cmd = cmd.replace(x, "").strip()

    return cmd


def recognize_cmd(cmd: str):
    rc = {'cmd': '', 'percent': 0}
    for c, v in config.VA_CMD_LIST.items():

        for x in v:
            vrt = fuzz.ratio(cmd, x)
            if vrt > rc['percent']:
                rc['cmd'] = c
                rc['percent'] = vrt

    return rc


def execute_cmd(cmd: str):

    if cmd == 'myname':
        winsound.PlaySound('d13.mp3', winsound.SND_FILENAME)




    elif cmd == 'joke':
        jokes = [#winsound.PlaySound('d7.mp3', winsound.SND_FILENAME),
                 #winsound.PlaySound('d9.mp3', winsound.SND_FILENAME),
                 #winsound.PlaySound('d10.mp3', winsound.SND_FILENAME),
                 winsound.PlaySound('d8.mp3', winsound.SND_FILENAME)]
        random.choice(jokes)

    elif cmd == 'open_browser':
        winsound.PlaySound('d6.mp3', winsound.SND_FILENAME)
        subprocess.call("C:/Program Files/Google/Chrome/Application/chrome.exe")

    elif cmd == 'open_youtube':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        chrome_path = 'C:/Program Files/Google/Chrome/Application/chrome.exe %s'
        webbrowser.get(chrome_path).open('https://www.youtube.com/')

    elif cmd == 'muz':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        chrome_path = 'C:/Program Files/Google/Chrome/Application/chrome.exe %s'
        webbrowser.get(chrome_path).open('https://www.youtube.com/')

    elif cmd == 'open_prez':
        winsound.PlaySound('d6.mp3', winsound.SND_FILENAME)
        os.startfile("C:\\Users\\Nur\\dam\\Jarvis 2.0\\1.pptx")

    elif cmd == 'f5':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("F5")

    elif cmd == 'klav':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("Page Down")

    elif cmd == 'off':
        winsound.PlaySound('d4.mp3', winsound.SND_FILENAME)
        pid = psutil.Process().pid
        process = psutil.Process(pid)
        process.terminate()

    elif cmd == 'game':
        winsound.PlaySound('game.wav', winsound.SND_FILENAME)
        subprocess.call("C:\Program Files (x86)\Left 4 Dead 2\left4dead2.exe")


    elif cmd == 'klav2':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("Page UP")

    elif cmd == 'nice':
        winsound.PlaySound('d3.mp3', winsound.SND_FILENAME)

    elif cmd == 'enter':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("Enter")

    elif cmd == 'stop':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("K")

    elif cmd == 'L':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("L")

    elif cmd == 'J':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("J")

    elif cmd == 'F':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("F")

    elif cmd == 'M':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("M")

    elif cmd == 'f4':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        keyboard.send("Alt+F4")

    elif cmd == 'left':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        mouse.click('left')

    elif cmd == 'tanday':
        winsound.PlaySound('ok1.wav', winsound.SND_FILENAME)
        mouse.move(886, 448)

class VoiceAssistantGUI(QMainWindow):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        # Установка шрифта и стиля окна
        font = QFont('Arial', 12)
        font.setBold(True)
        self.setFont(font)

        # Установка палитры для темной темы
        palette = QPalette()
        palette.setColor(QPalette.Window, QColor(53, 53, 53))
        palette.setColor(QPalette.WindowText, Qt.white)
        palette.setColor(QPalette.Base, QColor(25, 25, 25))
        palette.setColor(QPalette.AlternateBase, QColor(53, 53, 53))
        palette.setColor(QPalette.ToolTipBase, Qt.white)
        palette.setColor(QPalette.ToolTipText, Qt.white)
        palette.setColor(QPalette.Text, Qt.white)
        palette.setColor(QPalette.Button, QColor(53, 53, 53))
        palette.setColor(QPalette.ButtonText, Qt.blue)
        palette.setColor(QPalette.BrightText, Qt.red)
        palette.setColor(QPalette.Link, QColor(42, 130, 218))
        palette.setColor(QPalette.Highlight, QColor(42, 130, 218))
        palette.setColor(QPalette.HighlightedText, Qt.black)
        self.setPalette(palette)

        # Основной виджет и макет
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout(self.central_widget)

        # Кнопка для активации команды 'myname'
        self.myname_button = QPushButton('ALI', self)
        self.myname_button.clicked.connect(lambda: execute_cmd('nice'))
        self.layout.addWidget(self.myname_button)

        # ... Добавьте больше кнопок для других команд

        # Настройки окна
        self.setGeometry(300, 300, 300, 400)
        self.setWindowTitle('ALI')
        self.show()

def main():
    app = QApplication(sys.argv)
    ex = VoiceAssistantGUI()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
